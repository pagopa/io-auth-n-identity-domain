meta {
  name: ping
  type: http
  seq: 2
}

get {
  url: {{IO_LOLLIPOP_BASE_URL}}/info
  body: none
  auth: none
}

headers {
  ~x-functions-key: SET_IN_PREREQUEST_SCRIPT
}

script:pre-request {
  // Set header 'x-functions-key' if the necessary key is found in the Environment
  const ioLollipopApiKey = bru.getEnvVar("IO_LOLLIPOP_API_KEY");
  if (ioLollipopApiKey != null ) {
    req.setHeader("x-functions-key", ioLollipopApiKey);
  }
}

tests {
  const semverRegex = /^(\d+)\.(\d+)\.(\d+)(?:-[\da-z\-\.]+)?(?:\+[\da-z\-\.]+)?$/i;
  
  test("should return package info", function() {
    expect(res.getStatus()).to.equal(200);
    const data = res.getBody();
    expect(data).to.have.property("name");
    expect(data).to.have.property("version");
    expect(data.name).to.equal("io-lollipop");
    expect(data.version).to.match(semverRegex);
  });
}
