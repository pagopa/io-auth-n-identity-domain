<policies>
    <inbound>
        <base />
        <choose>
            <when condition="@(!context.User.Groups.Select(g => g.Name).Contains("{{api-profile-operation-group-name}}"))">
                <return-response>
                    <set-status code="403" reason="Unauthorized, the subscription used doesn't have the required permission" />
                </return-response>
            </when>
        </choose>
        <set-backend-service base-url="{{io-fn-profile-url}}" />
        <set-header name="x-functions-key" exists-action="override">
            <value>{{io-fn-profile-key}}</value>
        </set-header>
    </inbound>
    <backend>
        <base />
    </backend>
    <outbound>
        <base />
    </outbound>
    <on-error>
        <base />
    </on-error>
</policies>