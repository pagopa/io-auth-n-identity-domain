<policies>
    <inbound>
        <base />
        <set-backend-service base-url="{{io-fn-admin-trigger-url}}" />
        <set-header name="x-functions-key" exists-action="override">
            <value>{{io-fn-admin-master-key}}</value>
        </set-header>
        <choose>
            <when condition="@(!context.User.Groups.Select(g => g.Name).Contains("{{api-profile-operation-write-group-name}}"))">
                <return-response>
                    <set-status code="403" reason="Unauthorized, the subscription used doesn't have the required permission" />
                </return-response>
            </when>
            <when condition="@(!context.Request.Body.As<string>(preserveContent: true))">
                <return-response>
                    <set-status code="400" reason="Bad Request" />
                    <set-header name="Content-Type" exists-action="override">
                        <value>application/json</value>
                    </set-header>
                    <set-body>
                        {
                            "error": "Bad Request",
                            "message": "Request body is required"
                        }
                    </set-body>
                </return-response>
            </when>
            <otherwise>
                <set-body>
                    @{
                        var originalBody = context.Request.Body.As<string>(preserveContent: true);
                        var escapedBody = originalBody.Replace("\"", "\\\"");
                        return $"{{\"input\": \"{escapedBody}\"}}";
                    }
                </set-body>
            </otherwise>
        </choose>
    </inbound>
    <backend>
        <base />
    </backend>
    <outbound>
        <base />
    </outbound>
    <on-error>
        <base />
    </on-error>
</policies>